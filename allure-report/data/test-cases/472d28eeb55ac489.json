{"uid":"472d28eeb55ac489","name":"Browser Navigation Test","fullName":"test_navigation#test_navigation","historyId":"f04cfc753751533e230253abf058284e","time":{"start":1751620345394,"stop":1751620345412,"duration":18},"description":"\nThis test:\n- Opens Google\n- Navigates to Wikipedia\n- Goes back\n- Goes forward\n- Refreshes the page\n- Prints current URL\n","descriptionHtml":"<p>This test:</p>\n<ul>\n<li>Opens Google</li>\n<li>Navigates to Wikipedia</li>\n<li>Goes back</li>\n<li>Goes forward</li>\n<li>Refreshes the page</li>\n<li>Prints current URL</li>\n</ul>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","statusTrace":"self = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000028FB0CA7750>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n>                   raise ValueError(f\"The path is not a valid file: {path}\")\nE                   ValueError: The path is not a valid file: C:\\Users\\HP\\Downloads\\chromedriver-win64\\chromedriver.exe\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:64: ValueError\n\nThe above exception was the direct cause of the following exception:\n\n    @allure.title(\"Browser Navigation Test\")\n    @allure.description(\"\"\"\n    This test:\n    - Opens Google\n    - Navigates to Wikipedia\n    - Goes back\n    - Goes forward\n    - Refreshes the page\n    - Prints current URL\n    \"\"\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_navigation():\n    \n        with allure.step(\"Setup Chrome WebDriver\"):\n            # ✅ Replace this path with YOUR chromedriver.exe path if needed\n            service = Service(r\"C:\\Users\\HP\\Downloads\\chromedriver-win64\\chromedriver.exe\")\n            options = Options()\n            options.add_argument(\"--headless=new\")  # Remove this line if you want to see the browser\n>           driver = webdriver.Chrome(service=service, options=options)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_navigation.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:47: in __init__\n    super().__init__(\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:53: in __init__\n    if finder.get_browser_path():\n       ^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n           ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000028FB0CA7750>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n                    raise ValueError(f\"The path is not a valid file: {path}\")\n                self._paths[\"driver_path\"] = path\n            else:\n                output = SeleniumManager().binary_paths(self._to_args())\n                if Path(output[\"driver_path\"]).is_file():\n                    self._paths[\"driver_path\"] = output[\"driver_path\"]\n                else:\n                    raise ValueError(f\"The driver path is not a valid file: {output['driver_path']}\")\n                if Path(output[\"browser_path\"]).is_file():\n                    self._paths[\"browser_path\"] = output[\"browser_path\"]\n                else:\n                    raise ValueError(f\"The browser path is not a valid file: {output['browser_path']}\")\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {browser}\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:78: NoSuchDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"\nThis test:\n- Opens Google\n- Navigates to Wikipedia\n- Goes back\n- Goes forward\n- Refreshes the page\n- Prints current URL\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location","statusTrace":"self = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000028FB0CA7750>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n>                   raise ValueError(f\"The path is not a valid file: {path}\")\nE                   ValueError: The path is not a valid file: C:\\Users\\HP\\Downloads\\chromedriver-win64\\chromedriver.exe\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:64: ValueError\n\nThe above exception was the direct cause of the following exception:\n\n    @allure.title(\"Browser Navigation Test\")\n    @allure.description(\"\"\"\n    This test:\n    - Opens Google\n    - Navigates to Wikipedia\n    - Goes back\n    - Goes forward\n    - Refreshes the page\n    - Prints current URL\n    \"\"\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_navigation():\n    \n        with allure.step(\"Setup Chrome WebDriver\"):\n            # ✅ Replace this path with YOUR chromedriver.exe path if needed\n            service = Service(r\"C:\\Users\\HP\\Downloads\\chromedriver-win64\\chromedriver.exe\")\n            options = Options()\n            options.add_argument(\"--headless=new\")  # Remove this line if you want to see the browser\n>           driver = webdriver.Chrome(service=service, options=options)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_navigation.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:47: in __init__\n    super().__init__(\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:53: in __init__\n    if finder.get_browser_path():\n       ^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n           ^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000028FB0CA7750>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n                    raise ValueError(f\"The path is not a valid file: {path}\")\n                self._paths[\"driver_path\"] = path\n            else:\n                output = SeleniumManager().binary_paths(self._to_args())\n                if Path(output[\"driver_path\"]).is_file():\n                    self._paths[\"driver_path\"] = output[\"driver_path\"]\n                else:\n                    raise ValueError(f\"The driver path is not a valid file: {output['driver_path']}\")\n                if Path(output[\"browser_path\"]).is_file():\n                    self._paths[\"browser_path\"] = output[\"browser_path\"]\n                else:\n                    raise ValueError(f\"The browser path is not a valid file: {output['browser_path']}\")\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {browser}\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:78: NoSuchDriverException","steps":[{"name":"Setup Chrome WebDriver","time":{"start":1751620345394,"stop":1751620345396,"duration":2},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n","statusTrace":"  File \"C:\\Users\\HP\\Downloads\\New folder\\test_navigation.py\", line 27, in test_navigation\n    driver = webdriver.Chrome(service=service, options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 47, in __init__\n    super().__init__(\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 53, in __init__\n    if finder.get_browser_path():\n       ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 47, in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 78, in _binary_paths\n    raise NoSuchDriverException(msg) from err\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":1,"attachmentStep":false,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"suite","value":"test_navigation"},{"name":"host","value":"GP"},{"name":"thread","value":"12840-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_navigation"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"472d28eeb55ac489.json","parameterValues":[]}